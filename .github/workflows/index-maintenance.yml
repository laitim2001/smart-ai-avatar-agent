name: 索引維護自動化

on:
  push:
    branches:
      - main
      - develop
    paths:
      - 'app/**'
      - 'components/**'
      - 'lib/**'
      - 'types/**'
      - 'agent-brain/**'
      - 'docs/**'
      - 'scripts/**'
      - '!PROJECT_INDEX.md'

  pull_request:
    branches:
      - main
      - develop
    paths:
      - 'app/**'
      - 'components/**'
      - 'lib/**'
      - 'types/**'
      - 'agent-brain/**'
      - 'docs/**'
      - 'scripts/**'

  workflow_dispatch:

jobs:
  validate-index:
    name: 驗證索引完整性
    runs-on: ubuntu-latest

    steps:
      - name: Checkout 代碼
        uses: actions/checkout@v4

      - name: 設置 Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: 安裝依賴
        run: npm ci

      - name: 執行索引驗證
        id: validate
        run: |
          npm run validate-index
          echo "validation_result=$?" >> $GITHUB_OUTPUT
        continue-on-error: true

      - name: 檢查驗證結果
        if: steps.validate.outputs.validation_result != '0'
        run: |
          echo "::warning::索引驗證失敗，需要更新 PROJECT_INDEX.md"
          exit 0

  sync-index:
    name: 同步索引並建立 PR
    runs-on: ubuntu-latest
    needs: validate-index
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: Checkout 代碼
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: 設置 Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: 安裝依賴
        run: npm ci

      - name: 檢查索引是否需要更新
        id: check
        run: |
          npm run sync-index -- --dry-run > sync-output.txt 2>&1
          if grep -q "索引已是最新狀態" sync-output.txt; then
            echo "needs_update=false" >> $GITHUB_OUTPUT
          else
            echo "needs_update=true" >> $GITHUB_OUTPUT
          fi
          cat sync-output.txt

      - name: 執行索引同步
        if: steps.check.outputs.needs_update == 'true'
        run: npm run sync-index

      - name: 設置 Git 配置
        if: steps.check.outputs.needs_update == 'true'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: 建立分支並提交變更
        if: steps.check.outputs.needs_update == 'true'
        id: commit
        run: |
          BRANCH_NAME="auto-update-index-$(date +%Y%m%d-%H%M%S)"
          echo "branch_name=$BRANCH_NAME" >> $GITHUB_OUTPUT

          git checkout -b $BRANCH_NAME
          git add PROJECT_INDEX.md

          git commit -m "$(cat <<'EOF'
          🤖 自動更新專案索引

          自動同步 PROJECT_INDEX.md 與檔案系統狀態

          變更內容：
          - 更新檔案狀態標記
          - 更新最後更新日期
          - 更新版本號

          由 GitHub Actions 自動生成
          EOF
          )"

          git push origin $BRANCH_NAME

      - name: 建立 Pull Request
        if: steps.check.outputs.needs_update == 'true'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh pr create \
            --title "🤖 自動更新專案索引" \
            --body "$(cat <<'EOF'
          ## 📋 自動索引更新

          此 PR 由 GitHub Actions 自動建立，用於同步 `PROJECT_INDEX.md` 與當前檔案系統狀態。

          ### 🔄 變更內容
          - ✅ 更新檔案狀態標記（⏳ → ✅）
          - 📅 更新最後更新日期
          - 🔢 更新版本號

          ### ✅ 驗證步驟
          - [x] 自動執行索引驗證
          - [x] 自動同步檔案狀態
          - [ ] 人工檢查變更合理性

          ### 💡 後續操作
          1. 檢查 `PROJECT_INDEX.md` 的變更內容
          2. 確認所有檔案狀態正確
          3. 合併此 PR 以更新索引

          ---
          🤖 由 GitHub Actions 自動生成
          EOF
          )" \
            --base main \
            --head ${{ steps.commit.outputs.branch_name }} \
            --label "documentation,automated"

  quality-check:
    name: 索引品質檢查
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout 代碼
        uses: actions/checkout@v4

      - name: 設置 Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: 安裝依賴
        run: npm ci

      - name: 執行完整驗證
        run: |
          echo "📊 執行索引品質檢查..."
          npm run validate-index

      - name: 檢查索引是否同步
        run: |
          echo "🔍 檢查索引同步狀態..."
          npm run sync-index -- --dry-run

      - name: 生成品質報告
        if: always()
        run: |
          echo "## 📊 索引品質報告" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### ✅ 驗證結果" >> $GITHUB_STEP_SUMMARY
          npm run validate-index 2>&1 | tee -a $GITHUB_STEP_SUMMARY || true
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🔄 同步狀態" >> $GITHUB_STEP_SUMMARY
          npm run sync-index -- --dry-run 2>&1 | tee -a $GITHUB_STEP_SUMMARY || true
